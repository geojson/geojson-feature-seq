# Introduction

Large JSON files pose a problem that is well explained in the motivation
for JSON Text Sequences [RFC7464]. GeoJSON [GeoJSON] has exactly this
problem with sequences of features, amplified by the large arrays of
coordinates of each feature.

This document describes a solution to this problem based on JSON Text
Sequences. A GeoJSON Text Sequence is a document containing not, e.g.,
a single GeoJSON Feature Collection, but multiple GeoJSON Feature texts
that can be parsed and produced incrementally.

## Example

In a nutshell, GeoJSON Text Sequences proposes to "explode" the
following GeoJSON Feature Collection document

    { "type": "FeatureCollection",
      "features": [
        { "type": "Feature",
          "geometry": {"type": "Point", "coordinates": [102.0, 0.5]},
          "properties": {"prop0": "value0"}},
        { "type": "Feature",
          "geometry": {
            "type": "LineString",
            "coordinates": [
              [102.0, 0.0], [103.0, 1.0], [104.0, 0.0], [105.0, 1.0]]},
          "properties": {
            "prop0": "value0",
            "prop1": 0.0}},
        { "type": "Feature",
           "geometry": {
             "type": "Polygon",
             "coordinates": [
               [[100.0, 0.0], [101.0, 0.0], [101.0, 1.0],
                [100.0, 1.0], [100.0, 0.0] ]]},
           "properties": {
             "prop0": "value0",
             "prop1": {"this": "that"}}}]}

into a document containing 3 separate JSON texts delimited by the ASCII
character RS "0x1e" (represented by "RS" below).

    RS{ "type": "Feature", "geometry": {"type": "Point",
    "coordinates": [102.0, 0.5]}, "properties": {"prop0": "value0"}}
    RS{ "type": "Feature", "geometry": {"type": "LineString",
    "coordinates": [[102.0, 0.0], [103.0, 1.0], [104.0, 0.0],
    [105.0, 1.0]]}, "properties": {"prop0": "value0", "prop1": 0.0}}
    RS{ "type": "Feature", "geometry": {"type": "Polygon",
    "coordinates": [[[100.0, 0.0], [101.0, 0.0], [101.0, 1.0],
    [100.0, 1.0], [100.0, 0.0]]]}, "properties":
    {"prop0": "value0", "prop1": {"this": "that"}}}

## Requirements Language

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
[RFC2119].

# GeoJSON Text Sequence Format

TODO.
